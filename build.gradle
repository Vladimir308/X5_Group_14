plugins {
    id 'java-library'
    id "io.qameta.allure" version '2.9.6'
}

def slf4jVersion = "2.0.16",
    junitVersion = "5.11.4",
    selenideVersion = "7.7.0",
    allureVersion = "2.17.3",
    ownerVersion = "1.0.4",
    assertjCoreVersion = "3.27.3",
    webdrivermanagerVersion = "5.9.2",
    aspectjweaver = "1.9.22.1",
    contextproperties = "4.8.0"


allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}

repositories {
    mavenCentral()
}
dependencies {
    testImplementation(
            "com.codeborne:selenide:$selenideVersion",
            "org.junit.jupiter:junit-jupiter:$junitVersion",
            "org.slf4j:slf4j-simple:$slf4jVersion",
            "io.qameta.allure:allure-junit5:$allureVersion",
            "org.aspectj:aspectjweaver:$aspectjweaver",
            "org.assertj:assertj-core:$assertjCoreVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "io.github.bonigarcia:webdrivermanager:$webdrivermanagerVersion",
            "org.aeonbits.owner:owner:$ownerVersion",
            "com.anrisoftware.propertiesutils:propertiesutils-contextproperties:$contextproperties",
            testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:$junitVersion")
    )
}
tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

test {
    useJUnitPlatform()

    tasks.withType(Test).configureEach {
        systemProperties(System.getProperties())

    }
    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

tasks.register('for_x5_test', Test) {
    useJUnitPlatform {
        includeTags("x5test")
    }
}
tasks.register('for_test_X5', Test) {
    useJUnitPlatform {
        includeTags("testX5")
    }
}